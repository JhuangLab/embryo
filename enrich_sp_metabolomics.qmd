---
title: "Enrichment analysis for spatial metabolomics"
format: html
---

## Enrichment analysis for spatial metabolomics data

FELLA, a holistic graph-based method using KEGG database, was applied. The input items consist of all potential KEGG compound IDs of each ion. Utilizing a KEGG graph, all the methods, including diffusion, PageRank and hypergeometric algorithm, were employed and metabolism related pathways of top 5 smallest p-value were shown as the most significant for each tissue.

```{r, eval = FALSE} 
library(FELLA)
library(igraph)
library(tidyverse)

## build graph and data -----
fs::dir_create("~/ref/fella/")
## mouse ----
graph <- buildGraphFromKEGGREST(organism = "mmu", 
                                filter.path = c("01100", "01200", "01210", "01212", 
                                                "01230", "01232", "01250", "01240", "01220"))
write_rds(graph, "~/ref/fella/kegg_mmu_graph.rds")
tmpdir <- "~/ref/fella/kegg/mmu" 
# Mke sure the database does not exist from a former vignette build
# Otherwise the vignette will rise an error
# because FELLA will not overwrite an existing database
buildDataFromGraph(keggdata.graph = graph, databaseDir = tmpdir, internalDir = FALSE, 
                   matrices = c("hypergeom", "diffusion", "pagerank"), 
                   normality = c("diffusion", "pagerank"), niter = 200)
rm(list = ls())
gc()

## perform enrichment analysis -----
fella.data <- loadKEGGdata(databaseDir = tmpdir, internalDir = FALSE, loadMatrix = "diffusion")

xlsx_fn1 <- "Qualitative.xlsx"
for(samp in samples) {
  setwd(glue("{workdir}/{samp}"))
  mz_tbl <- rbind(neg_mks_lst[[samp]], pos_mks_lst[[samp]]) |> tibble() |> 
    dplyr::filter(avg_log2FC > 0, p_val_adj < .01) |> 
    mutate(mz2 = as.numeric(str_sub(gene, start = 5)) |> sprintf(fmt = "%.5f")) |> 
    mutate(gene2 = paste0(str_sub(gene, end = 4), mz2))
    anot_neg <- readxl::read_excel(xlsx_fn1, sheet = "neg-all") |> mutate(gene = paste0("neg-", mz))
    anot_pos <- readxl::read_excel(xlsx_fn1, sheet = "pos-all") |> mutate(gene = paste0("pos-", mz))
  anot_tbl <- rbind(anot_neg, anot_pos) |> tibble()

  tissues <- c("liver", "heart", "forebrain", "midbrain", "hindbrain")[c("liver", "heart", "forebrain", "midbrain", "hindbrain") %in% mz_tbl$cluster]
  tst_lst <- lapply(tissues, \(tissue){
      genes <- mz_tbl |> dplyr::filter(cluster == tissue, grepl("^neg-", gene)) |> pull(gene)
      if(length(genes) > 10){
        kegg_ids = anot_tbl |> dplyr::filter(gene %in% genes) |> pull(KEGG) |> na.omit() |> unique()
      keg_id <- kegg_ids
      anls <- enrich(compounds = keg_id, data = fella.data, 
                     method = c("hypergeom", "diffusion", "pagerank"), approx = "normality")
      getExcluded(anls)
      res_tbl <- generateResultsTable(method = "diffusion", threshold = 0.2, capPscores = 0, 
                                      object = anls, data = fella.data, clusterLengthAtPlot = 100)
      res_tbl2 <- generateResultsTable(method = "pagerank", threshold = 0.2, capPscores = 0, 
                                       object = anls, data = fella.data, clusterLengthAtPlot = 100)
      res_tbl3 <- generateResultsTable(method = "hypergeom", threshold = 0.2, capPscores = 0,  
                                       object = anls, data = fella.data, clusterLengthAtPlot = 100)
      
      res_lst <- list(diffusion = res_tbl, pagerank = res_tbl2, hypergeom = res_tbl3)
      res_lst <- res_lst[!unlist(lapply(res_lst, is.null))]
      for(idx in 1:length(res_lst)) {
        res_lst[[idx]][["KEGG.name"]] <-
          stringr::str_split(res_lst[[idx]][["KEGG.name"]], " - Mus", simplify = T)[, 1]
      }
      writexl::write_xlsx(res_lst, glue("fella_enrich_up_res_{tissue}_neg_true.xlsx"))

    }
  })
}

```
